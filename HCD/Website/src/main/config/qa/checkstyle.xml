<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2011.
  ~
  ~ Nutzung und Rechte
  ~
  ~ Die Applikation eBot wurde für Studierende der ETH Zürich entwickelt. Sie  steht
  ~ allen   an   Hochschulen  oder   Fachhochschulen   eingeschriebenen Studierenden
  ~ (auch  ausserhalb  der  ETH  Zürich)  für  nichtkommerzielle  Zwecke  im Studium
  ~ kostenlos zur Verfügung. Nichtstudierende Privatpersonen, die die Applikation zu
  ~ ihrer  persönlichen  Weiterbildung  nutzen  möchten,  werden  gebeten,  für  die
  ~ nichtkommerzielle Nutzung einen einmaligen Beitrag von Fr. 20.– zu bezahlen.
  ~
  ~ Postkonto
  ~
  ~ Unterricht, 85-761469-0, Vermerk "eBot"
  ~ IBAN 59 0900 0000 8576  1469 0; BIC POFICHBEXXX
  ~
  ~ Jede andere Nutzung der Applikation  ist vorher mit dem Projektleiter  (Matthias
  ~ Baltisberger, Email:  balti@ethz.ch) abzusprechen  und mit  einer entsprechenden
  ~ Vereinbarung zu regeln. Die  Applikation wird ohne jegliche  Garantien bezüglich
  ~ Nutzungsansprüchen zur Verfügung gestellt.
  -->

<!--
  ~ Copyright (c) 2011.
  ~
  ~ Nutzung und Rechte
  ~
  ~ Die Applikation eBot wurde für Studierende der ETH Zürich entwickelt. Sie  steht
  ~ allen   an   Hochschulen  oder   Fachhochschulen   eingeschriebenen Studierenden
  ~ (auch  ausserhalb  der  ETH  Zürich)  für  nichtkommerzielle  Zwecke  im Studium
  ~ kostenlos zur Verfügung. Nichtstudierende Privatpersonen, die die Applikation zu
  ~ ihrer  persönlichen  Weiterbildung  nutzen  möchten,  werden  gebeten,  für  die
  ~ nichtkommerzielle Nutzung einen einmaligen Beitrag von Fr. 20.– zu bezahlen.
  ~
  ~ Postkonto
  ~
  ~ Unterricht, 85-761469-0, Vermerk "eBot"
  ~ IBAN 59 0900 0000 8576  1469 0; BIC POFICHBEXXX
  ~
  ~ Jede andere Nutzung der Applikation  ist vorher mit dem Projektleiter  (Matthias
  ~ Baltisberger, Email:  balti@ethz.ch) abzusprechen  und mit  einer entsprechenden
  ~ Vereinbarung zu regeln. Die  Applikation wird ohne jegliche  Garantien bezüglich
  ~ Nutzungsansprüchen zur Verfügung gestellt.
  -->

        !DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.1//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">
        <!--
          Checkstyle checks configured for Maven.
        -->
<module name="Checker">

    <!-- Checks that a package.html file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->
    <module name="PackageHtml"/>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="crlf"/>
    </module>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>

    <module name="TreeWalker">

        <property name="cacheFile" value="${checkstyle.cache.file}"/>

        <!-- ************************************************************** -->
        <!-- Checks that are different from the sun coding conventions ones -->
        <!-- ************************************************************** -->
        <module name="Header">
            <property name="headerFile" value="conf/checkstyle-header.txt"/>
            <property name="ignoreLines" value="1"/>
        </module>
        <property name="tabWidth" value="4"/>
        <module name="LeftCurly">
            <property name="option" value="eol"/>
        </module>
        <module name="RightCurly">
            <property name="option" value="alone"/>
        </module>
        <module name="LineLength">
            <property name="max" value="132"/>
        </module>
        <module name="MethodLength">
            <property name="max" value="175"/>
        </module>
        <module name="ParenPad">
            <property name="option" value="nospace"/>
        </module>
        <module name="ConstantName">
            <property name="format" value="^[A-Z][A-Z0-9_]*[A-Z0-9]+$"/>
        </module>

        <!-- ************************************************************** -->
        <!-- Default Sun coding conventions checks                          -->
        <!-- ************************************************************** -->

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocMethod"/>
        <module name="JavadocType"/>
        <module name="JavadocVariable"/>

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>
        <module name="MemberName"/>

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/>
        <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="FileLength"/>
        <module name="ParameterNumber"/>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="TabCharacter"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock">
            <property name="option" value="text"/>
            <property name="tokens"
                      value="LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_IF, LITERAL_FOR, LITERAL_TRY, LITERAL_WHILE, INSTANCE_INIT, STATIC_INIT"/>
        </module>
        <module name="NeedBraces"/>

        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!-- module name="AvoidInlineConditionals"/ -->
        <module name="DoubleCheckedLocking"/>
        <!-- MY FAVOURITE -->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <!-- module name="FinalLocalVariable"/ Not supported yet -->
        <!-- module name="HiddenField"/ -->
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MissingSwitchDefault"/>
        <!--<module name="RedundantThrows"/>-->
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <!-- module name="ReturnCount" Not supported yet -->
        <!-- property name="max" value="1"/ -->
        <!-- /module -->

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!--<module name="DesignForExtension"/>-->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier"/>

        <!-- Checks for duplicate code                           -->
        <!-- See http://checkstyle.sf.net/config_duplicates.html -->
        <!-- module name="Simian"/ -->

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <!-- <module name="FinalParameters"/> -->
        <module name="GenericIllegalRegexp">
            <property name="format" value="\s+$"/>
            <property name="message" value="Line has trailing spaces."/>
        </module>
        <module name="TodoComment"/>
        <module name="UpperEll"/>

    </module>

</module>